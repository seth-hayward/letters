@{
    Layout = null;
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1"> 
    <title>letters to crushes chat</title>

    <link rel="icon" type="image/png" href="@Url.Content("~/Content/favicon.ico")" />

    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>

    <link href="@Url.Content("~/Content/chat.css")?20130714" rel="stylesheet">

	<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.date-format.js")"></script>

    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery-layout/jquery-ui-1.9.2.min.js")"></script>
	<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-layout/jquery.layout-1.3.0.js")"></script>
    <link type="text/css" rel="stylesheet" href="@Url.Content("~/Scripts/jquery-layout/layout-default-latest.css")" />
	
    <script src="@Url.Content("~/Scripts/jquery.signalR-1.1.3.min.js")" type="text/javascript"></script>

    <script src="~/signalr/hubs" type="text/javascript"></script>

    <script type="text/javascript">

        var myLayout;

        $(function () {
            myLayout = $('body').layout({

                //	reference only - these options are NOT required because 'true' is the default
                closable: true	// pane can open & close
                , resizable: true	// when open, pane can be resized 
                , slidable: true	// when closed, pane can 'slide' open over other panes - closes on mouse-out
                , livePaneResizing: true
                                //	some resizing/toggling settings
                , north__slidable: false	// OVERRIDE the pane-default of 'slidable=true'
                , north__togglerLength_closed: '100%'	// toggle-button is full-width of resizer-bar
                , north__spacing_closed: 10		// big resizer-bar when open (zero height)
                , north__minSize: 100
                , north__size: 300
                , north__showOverflowOnHover: false
                , north__onopen_start: function () {
                    $("#chat_history").load("@Url.Content("~/chat/history")");
                }
                , north__initHidden: true
                , north__initClosed: true
                , north__closable: true
                , center__showOverflowOnHover: false
                , south__initHidden: true
                //	enable state management
                , stateManagement__enabled: false // automatic cookie load & save enabled by default
                , showDebugMessages: false // log and/or display messages from debugging & testing code
            });

            // focus on chat name
            $("#chat_name").focus();

            Date.prototype.addHours = function(h) {    
                this.setTime(this.getTime() + (h*60*60*1000)); 
                return this;   
            }

            String.prototype.toDate = function () {
                "use strict";

                var match = /\/Date\((\d{13})\)\//.exec(this);

                return match === null ? null : new Date(parseInt(match[1], 10));
            };

            //used to keep the most recent messages visible
            function scrollDown(loading) {
                if (loading == true) { return; }

                $("#chat_container").animate({ scrollTop: $("#log").height() + 100 }, 1);

                $("#entry").focus();
            }

            var chat;

            var messsage_counter = 0;

            // first we want to get the user's name
            // before we make the chat client

            function updateMessage(message, loading) {

                var output_message = '<table class="message"><tr>';
                
                var chat_date = message.ChatDate;

                var urlRE = /https?:\/\/([-\w\.]+)+(:\d+)?(\/([^\s]*(\?\S+)?)?)?/g;

                // replace URLs with links
                message.Message = message.Message.replace(urlRE, '<a target="_blank" href="$&">$&</a>');

                output_message += '  <td class="date">' + dateFormat(chat_date, "h:MM TT") + '</td>';
                output_message += '  <td valign="top" class="nick">' + message.Nick + '</td>';
                output_message += '  <td class="msg-txt">' + message.Message + '</td>'
                output_message += '</tr></table>'
                $("#log").append(output_message);
                scrollDown(loading);
            }

            function updatePageTitle() {

                if (message_counter >= 1) {
                    document.title = "(" + message_counter + ") letters to crushes chat";
                } else {
                    document.title = "letters to crushes chat";
                }

            }

            function joinChat() {

                // Proxy created on the fly          
                chat = $.connection.visitorUpdate;

                // Start the connection
                $.connection.hub.start();

                // let's just show the stuff right away
                $("#name").hide();
                $("#log").empty();
                $("#log").show();
                $("#toolbar").show();
                myLayout.toggle("north");
                myLayout.hide("north");
                myLayout.show("south");

                // Declare a function on the chat hub so the server can invoke it          
                chat.client.addMessage = function (message) {

                    // handle a special case where we want to 
                    // reset the history when we join a new chat
                    if (message.Room == "reset-channel") {
                        $("#log").empty();
                        return;
                    }

                    updateMessage(message, false);

                    message_counter++;
                    updatePageTitle();

                };

                // Declare a function on the chat hub so the server can invoke it          
                chat.client.addBacklog = function (messages) {
                    for (var i = 0; i < messages.length; i++) {
                        updateMessage(messages[i], true);
                    }

                    scrollDown(false);
                };

                chat.client.reloadChat = function () {

                    var message = {
                        Message: "Detected login/logout in another browser. Please hold tight.",
                        Nick: "chatbot",
                        ChatDate: new Date(),
                        Publish: 1,
                    };

                    $.connection.hub.stop();
                    updateMessage(message);
                    var timeout_id = window.setTimeout(function () {
                        joinChat();
                    }, 3000);

                }

                chat.client.errorMessage = function (message) {
                    $("#name").show();
                    $("#log").hide();
                    $("#toolbar").hide();

                    myLayout.hide("north");
                    myLayout.hide("south");

                    alert(message);

                    // currently only error messages
                    // occur if the user is logged in already
                    $.connection.hub.stop();

                };

                chat.client.enterChat = function (message) {
                    message_counter = 0;
                };
                 
                $.connection.hub.stateChanged(function (change) {

                    //console.log("newState: " + change.newState);

                    var date_now = new Date();
                    var reconnecting = false;

                    var message = {
                        Message: change.newState,
                        Nick: "chatbot",
                        ChatDate: date_now,
                        Publish: 1,
                    };

                    if (change.newState === $.signalR.connectionState.reconnecting) {
                        message.Message = "RECONNECTING... we lost connection to the chat server. Please wait, or press the refresh button on your browser. Sorry!";
                        // ... sometimes the user doesn't reconnect
                        // but it says 'joined' on the chat...

                        reconnecting = true;
                    }
                    else if (change.newState === $.signalR.connectionState.disconnected) {
                        message.Message = "Disconnected.";

                        $.connection
                    }
                    else if (change.newState === $.signalR.connectionState.connecting) {
                        message.Message = "Connecting.";
                        message.Publish = 0;
                    }
                    else if (change.newState === $.signalR.connectionState.connected) {
                        message.Message = "Connected.";
                        message.Publish = 0;

                        chat.server.join($("#chat_name").val());

                    }

                    updateMessage(message);

                });

            }


            $('#entry').keydown(function (e) {
                if (e.keyCode == 13) {

                    var chat_message = $("#entry").val();

                    chat.server.sendChat($('#entry').val());
                    $("#entry").val("");
                    message_counter = -1;

                    updatePageTitle();
                    e.preventDefault();
                }
            })

            $('#chat_name').keydown(function (e) {

                if ($('#chat_name').val().length == 0) {
                    return;
                }

                if (e.keyCode == 13) {
                    joinChat();
                    e.preventDefault();
                    return false;
                }
            })

            $("#join").click(function () {

                if ($('#chat_name').val().length == 0) {
                    return;
                }

                joinChat();               
            });

        });

    </script>
  
</head>
<body>


    
    <div id="chat_history" class="ui-layout-north" >


    </div>



    <div id="chat_container" data-role="page" class="ui-layout-center">

	    <div data-role="content">	

            <div id="app">

                <div id="name">        
                    <label for="chat_name">name</label>
                    <input id="chat_name" class="text" type="text" name="nick" value=""/>                        
                    <input type="button" id="join" value="join chat"/>                                
                    </div>
                         
                <div id="log" style="display: none;">

                    <p>Loading...</p>

                </div>

                <div id="ending_point">

                </div>
                                                   
            </div>

	    </div><!-- /content -->


    </div><!-- /page -->

    <div class="ui-layout-south" id="toolbar" >    
        <table style="width: 100%;">
            <tr>
                <td style="text-align: center">
                    <input tabindex="1" id="entry" type="text" />
                </td>
            </tr>

        </table>
    </div>

    

               
                    


    <script type="text/javascript">
        var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
        document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
    try {
        var pageTracker = _gat._getTracker("UA-459727-11");
        pageTracker._trackPageview();
    } catch (err) { }</script>

</body>
</html>